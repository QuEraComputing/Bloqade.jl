name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: ${{ matrix.package }} - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
        package:
          - EaRydODE
          - EaRydLattices
          - EaRydWaveforms
          - EaRydCore
          - EaRydPlots
          - EaRyd
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Setup Private Registry"
        shell: julia --color=yes {0}
        run: |
          import Pkg
          import Pkg.Registry: RegistrySpec
          ENV["JULIA_PKG_SERVER"] = ""
          Pkg.Registry.add("General")
          Pkg.Registry.add(RegistrySpec(url="https://DrHenryArmitage:${{ secrets.CI_TOKEN }}@github.com/Happy-Diode/Miskatonic.git"))
      - name: "develop lib packages"
        run: julia --project .ci/run.jl dev
      - uses: julia-actions/julia-buildpkg@v1
      - name: "run tests"
        run: julia --project .ci/run.jl test ${{ matrix.package }}
      - name: "process code coverage"
        run: julia --project .ci/codecov.jl ${{ matrix.package }}
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.package }} - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
          parallel: true
          path-to-lcov: lcov.info

  finish:
      name: Coveralls Finished
      needs: test
      runs-on: ubuntu-latest
      steps:
        - uses: coverallsapp/github-action@master
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            parallel-finished: true
