name: CI
on:
  pull_request:
  push:
    branches:
      - master
  schedule:
  - cron: '00 01 * * *'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: [ubuntu-latest]
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**", "**/examples/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  test:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: ${{ matrix.package }} - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
        package:
          - '.'
          - 'lib/BloqadeGates'
          - 'lib/BloqadeExpr'
          - 'lib/BloqadeDormandPrince'
          - 'lib/BloqadeKrylov'
          - 'lib/BloqadeLattices'
          - 'lib/BloqadeMIS'
          - 'lib/BloqadeODE'
          - 'lib/BloqadeQMC'
          - 'lib/BloqadeSchema'
          - 'lib/BloqadeWaveforms'
          - 'lib/YaoSubspaceArrayReg'
          - 'lib/BloqadeNoisy'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "develop lib packages"
        run: |
          git clean -xdf
          .ci/run dev
      - name: "run tests"
        run: .ci/run test ${{ matrix.package }} --coverage
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
